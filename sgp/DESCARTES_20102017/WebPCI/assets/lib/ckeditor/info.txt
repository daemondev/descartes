( function() {
    CKEDITOR.plugins.add( 'youtube',
    {
        requires: [ 'iframedialog' ],
        init: function( editor )
        {
           var me = this;
           CKEDITOR.dialog.add( 'youTubeDialog', function ()
           {
              return {
                 title : 'YouTube Dialog',
                 minWidth : 550,
                 minHeight : 200,
                 contents :
                       [
                          {
                             id : 'iframe',
                             label : 'Insert YouTube Movie...',
                             expand : true,
                             elements :
                                   [
                                      {
                                         type : 'iframe',
                                         src : me.path + 'dialogs/youtube.html',
                                         width : '100%',
                                         height : '100%',
                                         onContentLoad : function() {
                                            // Iframe is loaded...
                                         }
                                      }
                                   ]
                          }
                       ],
                 onOk : function()
                 {
                    // Notify your iframe scripts here...
                 }
              };
           } );

            editor.addCommand( 'youtube', new CKEDITOR.dialogCommand( 'youTubeDialog' ) );

            editor.ui.addButton( 'youtube',
            {
                label: 'Insert YouTube Movie...',
                command: 'youtube',
                icon: this.path + 'images/icon.gif'
            } );
        }
    } );
} )();


/*
img {
    position: absolute;
    top: 0; bottom:0; left: 0; right:0;
    margin: auto;
}

img.center {
    display: block;
    margin: 0 auto;
}
*/

/*### set readonly
//https://ckeditor.com/latest/samples/old/readonly.html
var editor;
		// The instanceReady event is fired, when an instance of CKEditor has finished
		// its initialization.
		CKEDITOR.on( 'instanceReady', function( ev ) {
			editor = ev.editor;

			// Show this "on" button.
			document.getElementById( 'readOnlyOn' ).style.display = '';

			// Event fired when the readOnly property changes.
			editor.on( 'readOnly', function() {
				document.getElementById( 'readOnlyOn' ).style.display = this.readOnly ? 'none' : '';
				document.getElementById( 'readOnlyOff' ).style.display = this.readOnly ? '' : 'none';
			});
		});

		function toggleReadOnly( isReadOnly ) {
			// Change the read-only state of the editor.
			// http://docs.ckeditor.com/#!/api/CKEDITOR.editor-method-setReadOnly
			editor.setReadOnly( isReadOnly );
		}

	
*/
/*
// Save command after loading editor.
var sourceCommand = CKEDITOR.instances.editor1.ui._.items.Source.args[0].command;

// When disabling editor, unset command
CKEDITOR.instances.editor1.ui._.items.Source.args[0].command = undefined;

// When enabling editor, reset command
CKEDITOR.instances.editor1.ui._.items.Source.args[0].command = sourceCommand;
*/